// Copyright (c) 2018, Danilo Ferreira. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//
// * Redistributions of source code must retain the above copyright notice, this
//   list of conditions and the following disclaimer.
//
// * Redistributions in binary form must reproduce the above copyright notice,
//   this list of conditions and the following disclaimer in the documentation
//   and/or other materials provided with the distribution.
//
// * Neither the name of the copyright holder nor the names of its
//   contributors may be used to endorse or promote products derived from
//   this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
// FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
// DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
// SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
// CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
// OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

global proc importFEMCacheSetup(string $parent, int $forceFactorySettings) {
    setParent $parent;
    setFEMOptionVariables($forceFactorySettings);

    textFieldGrp -edit -text `optionVar -query femCacheName` cacheNameField;
    textField -edit -text `optionVar -query femCacheDirectory` cacheDirectoryField;
}

global proc importFEMCacheCallback(string $parent, int $doAction) {
    setParent $parent;

    optionVar -stringValue femCacheName `textFieldGrp -query -text cacheNameField`;
    optionVar -stringValue femCacheDirectory `textField -query -text cacheDirectoryField`;
    
    if ($doAction)
        evalEcho "importFEMCache";
}

global proc importFEMCacheOptions() {
    global string $globalFEMHelpTag;

    string $optionBoxTitle = "Import FEM Cache Options";
    string $optionBoxCommand = "importFEMCache";
    string $optionBoxSetup = $optionBoxCommand + "Setup";
    string $optionBoxCallback = $optionBoxCommand + "Callback";
    
    string $optionBox = getOptionBox();
    setParent $optionBox;
    
    setOptionBoxTitle($optionBoxTitle);
    setOptionBoxCommandName($optionBoxCommand);
    setOptionBoxHelpTag($globalFEMHelpTag);
    
    setUITemplate -pushTemplate DefaultTemplate;
    waitCursor -state true;
    
    tabLayout -scrollable true -tabsVisible false;
    string $parent = `columnLayout -adjustableColumn true`;

    textFieldGrp -label "Cache Name:" cacheNameField;
    
    rowLayout -height 25 -numberOfColumns 3 -columnWidth3 170 100 30 -adjustableColumn 2;

    text -label "Cache Directory:";
    textField cacheDirectoryField;
    symbolButton -image "navButtonBrowse.png" openBrowserButton;

    setParent ..;
    
    waitCursor -state false;
    setUITemplate -popTemplate;
    
    string $applyButton = getOptionBoxApplyBtn();
    string $saveButton = getOptionBoxSaveBtn();
    string $resetButton = getOptionBoxResetBtn();

    button -edit -label "Import" -command ($optionBoxCallback + " " + $parent + " " + true) $applyButton;
    button -edit -command ($optionBoxCallback + " " + $parent + " " + false) $saveButton;
    button -edit -command ($optionBoxSetup + " " + $parent + " " + true) $resetButton;

    eval ($optionBoxSetup + " " + $parent + " " + false);
    
    showOptionBox();
}